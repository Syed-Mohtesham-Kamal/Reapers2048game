{"version":3,"sources":["assets/img/try-again.gif","Component/GameOverlay.js","Component/Tile.js","Component/Cell.js","helper/index.js","Component/Board.js","hooks/useEvent.js","Component/popup.js","Component/Player.js","logo.gif","welcome.png","index.js"],"names":["GameOverlay","onRestart","board","hasWon","className","hasLost","onClick","src","TryAgainLogo","alt","style","width","height","cursor","Tile","tile","classArray","push","value","mergedInto","row","column","isNew","hasMoved","fromRow","toRow","fromColumn","toColumn","classes","join","Cell","rotateLeft","matrix","rows","length","columns","res","this","oldRow","oldColumn","markForDeletion","id","Board","tiles","cells","score","size","fourProbability","deltaX","deltaY","i","addTile","addRandomTile","setPositions","won","args","hasChanged","currentRow","filter","resultRow","target","targetTile","shift","tile1","tile2","forEach","rowIndex","columnIndex","emptyCells","r","c","cell","Math","random","newValue","direction","clearOldTiles","moveLeft","canMove","dir","newRow","newColumn","BoardView","useState","setBoard","event","handler","passive","useEffect","window","addEventListener","removeEventListener","useEvent","keyCode","newBoard","Object","assign","create","getPrototypeOf","move","map","col","colIndex","index","resetGame","Popup","props","trigger","children","setTrigger","stroke","fill","viewBox","xmlns","d","Player","url","Audio","audio","playing","setPlaying","play","pause","useAudio","toggle","App","timedPopup","setTimedPopup","setTimeout","logo","welcome","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d6851f5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/try-again.4f930231.gif\";","import React from 'react'\r\nimport TryAgainLogo from '../assets/img/try-again.gif'\r\n\r\nconst GameOverlay = ({onRestart, board}) => {\r\n    if (board.hasWon()){\r\n        return <div className=\"tile2048\"></div>;\r\n    } else if(board.hasLost()) {\r\n        return <div className=\"gameOver\" onClick={onRestart}><img src={TryAgainLogo} alt=\"Try Again\" style={{\r\n            width: '100%',\r\n            height: '100%',\r\n            cursor: \"pointer\",\r\n        }}/></div>\r\n    }\r\n    \r\n    return null;\r\n\r\n};\r\nexport default GameOverlay;\r\n","import React from 'react'\r\n\r\nconst Tile = ({tile}) => {\r\n  let classArray=['tile'];\r\n  classArray.push('tile'+tile.value)\r\n  if(!tile.mergedInto){\r\n    classArray.push(`position_${tile.row}_${tile.column}`);\r\n  }\r\n  if(tile.mergedInto){\r\n    classArray.push(`merged`);\r\n  }\r\n  if(tile.isNew()){\r\n    classArray.push('new');\r\n  }\r\n  if(tile.hasMoved()){\r\n    classArray.push(`row_from_${tile.fromRow()}_to_${tile.toRow()}`);\r\n    classArray.push(`column_from_${tile.fromColumn()}_to_${tile.toColumn()}`);\r\n    classArray.push(\"isMoving\");\r\n  }\r\n  let classes=classArray.join(\" \");\r\n  return (\r\n    <span className={classes}></span>\r\n  )\r\n}\r\n\r\nexport default Tile;\r\n","import React from 'react'\r\n\r\nconst Cell = () => {\r\n    return (\r\n        <div className=\"cell\">\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cell\r\n","var rotateLeft = function (matrix) {\n  var rows = matrix.length;\n  var columns = matrix[0].length;\n  var res = [];\n  for (var row = 0; row < rows; ++row) {\n    res.push([]);\n    for (var column = 0; column < columns; ++column) {\n      res[row][column] = matrix[column][columns - row - 1];\n    }\n  }\n  return res;\n};\n\nclass Tile {\n  constructor(value, row, column) {\n    this.value = value || 0;\n    this.row = row || -1;\n    this.column = column || -1;\n    this.oldRow = -1;\n    this.oldColumn = -1;\n    this.markForDeletion = false;\n    this.mergedInto = null;\n    this.id = this.id++ || 0;\n  }\n  moveTo(row, column) {\n    this.oldRow = this.row;\n    this.oldColumn = this.column;\n    this.row = row;\n    this.column = column;\n  }\n  isNew() {\n    return this.oldRow === -1 && !this.mergedInto;\n  }\n  hasMoved() {\n    return (\n      (this.fromRow() !== -1 &&\n        (this.fromRow() !== this.toRow() ||\n          this.fromColumn() !== this.toColumn())) ||\n      this.mergedInto\n    );\n  }\n  fromRow() {\n    return this.mergedInto ? this.row : this.oldRow;\n  }\n  fromColumn() {\n    return this.mergedInto ? this.column : this.oldColumn;\n  }\n  toRow() {\n    return this.mergedInto ? this.mergedInto.row : this.row;\n  }\n  toColumn() {\n    return this.mergedInto ? this.mergedInto.column : this.column;\n  }\n}\n\nclass Board {\n  constructor() {\n    this.tiles = [];\n    this.cells = [];\n    this.score = 0;\n    this.size = 4;\n    this.fourProbability = 0.1;\n    this.deltaX = [-1, 0, 1, 0];\n    this.deltaY = [0, -1, 0, 1];\n    for (var i = 0; i < this.size; ++i) {\n      this.cells[i] = [\n        this.addTile(),\n        this.addTile(),\n        this.addTile(),\n        this.addTile(),\n      ];\n    }\n    this.addRandomTile();\n    this.addRandomTile();\n    this.setPositions();\n    this.won = false;\n  }\n  addTile(args) {\n    var res = new Tile(args);\n    this.tiles.push(res);\n    return res;\n  }\n\n  moveLeft() {\n    var hasChanged = false;\n    for (var row = 0; row < this.size; ++row) {\n      var currentRow = this.cells[row].filter((tile) => tile.value !== 0);\n      var resultRow = [];\n      for (var target = 0; target < this.size; ++target) {\n        var targetTile = currentRow.length\n          ? currentRow.shift()\n          : this.addTile();\n        if (currentRow.length > 0 && currentRow[0].value === targetTile.value) {\n          var tile1 = targetTile;\n          targetTile = this.addTile(targetTile.value);\n          tile1.mergedInto = targetTile;\n          var tile2 = currentRow.shift();\n          tile2.mergedInto = targetTile;\n          targetTile.value += tile2.value;\n          this.score += tile1.value + tile2.value;\n        }\n        resultRow[target] = targetTile;\n        this.won |= targetTile.value === 2048;\n        hasChanged |= targetTile.value !== this.cells[row][target].value;\n      }\n      this.cells[row] = resultRow;\n    }\n    return hasChanged;\n  }\n  setPositions() {\n    this.cells.forEach((row, rowIndex) => {\n      row.forEach((tile, columnIndex) => {\n        tile.oldRow = tile.row;\n        tile.oldColumn = tile.column;\n        tile.row = rowIndex;\n        tile.column = columnIndex;\n        tile.markForDeletion = false;\n      });\n    });\n  }\n  addRandomTile() {\n    var emptyCells = [];\n    for (var r = 0; r < this.size; ++r) {\n      for (var c = 0; c < this.size; ++c) {\n        if (this.cells[r][c].value === 0) {\n          emptyCells.push({ r: r, c: c });\n        }\n      }\n    }\n    var index = ~~(Math.random() * emptyCells.length);\n    var cell = emptyCells[index];\n    var newValue = Math.random() < this.fourProbability ? 4 : 2;\n    this.cells[cell.r][cell.c] = this.addTile(newValue);\n  }\n  move(direction) {\n    // 0 -> left, 1 -> up, 2 -> right, 3 -> down\n    this.clearOldTiles();\n    for (var i = 0; i < direction; ++i) {\n      this.cells = rotateLeft(this.cells);\n    }\n    var hasChanged = this.moveLeft();\n    for (let i = direction; i < 4; ++i) {\n      this.cells = rotateLeft(this.cells);\n    }\n    if (hasChanged) {\n      this.addRandomTile();\n    }\n    this.setPositions();\n    return this;\n  }\n  clearOldTiles() {\n    this.tiles = this.tiles.filter((tile) => tile.markForDeletion === false);\n    this.tiles.forEach((tile) => {\n      tile.markForDeletion = true;\n    });\n  }\n  hasWon() {\n    return this.won;\n  }\n  hasLost() {\n    var canMove = false;\n    for (var row = 0; row < this.size; ++row) {\n      for (var column = 0; column < this.size; ++column) {\n        canMove |= this.cells[row][column].value === 0;\n        for (var dir = 0; dir < 4; ++dir) {\n          var newRow = row + this.deltaX[dir];\n          var newColumn = column + this.deltaY[dir];\n          if (\n            newRow < 0 ||\n            newRow >= this.size ||\n            newColumn < 0 ||\n            newColumn >= this.size\n          ) {\n            continue;\n          }\n          canMove |=\n            this.cells[row][column].value ===\n            this.cells[newRow][newColumn].value;\n        }\n      }\n    }\n    return !canMove;\n  }\n}\n\nexport { Board };\n","import React, { useState, useEffect } from 'react';\r\nimport useEvent from '../hooks/useEvent';\r\nimport GameOverlay from './GameOverlay';\r\nimport Tile from './Tile';\r\nimport Cell from './Cell';\r\nimport {Board} from \"../helper\";\r\n\r\n\r\nconst BoardView = () => {\r\n\r\n    const[board,setBoard] = useState(new Board());\r\n    \r\n    const handleKeyDown = (event)=>{\r\n      if(board.hasWon()){\r\n        return;\r\n      }\r\n      if(event.keyCode>=37 && event.keyCode<=40)\r\n      {\r\n        let direction = event.keyCode-37;\r\n        let boardClone = Object.assign(Object.create(Object.getPrototypeOf(board)), board)\r\n        let newBoard=boardClone.move(direction);\r\n        setBoard(newBoard);\r\n      }\r\n    }\r\n\r\n    useEvent('keydown', handleKeyDown);\r\n\r\n    const cells=board.cells.map((row,rowIndex)=>{\r\n      return(\r\n        <div key={rowIndex}>\r\n        {row.map((col,colIndex)=>{\r\n          return <Cell key={rowIndex*board.size+colIndex}/>\r\n        })}\r\n        </div>\r\n      );\r\n    });\r\n    const tiles=board.tiles.filter((tile)=>tile.value!==0)\r\n    .map((tile,index)=>{\r\n      return <Tile tile={tile} key={index}/>\r\n    });\r\n\r\n    const resetGame=()=>{\r\n      setBoard(new Board())\r\n    };\r\n    return (\r\n       <div>\r\n       <div className=\"details-box\">\r\n        <div className=\"resetButton\" onClick={resetGame}>New Game</div>\r\n        <div className=\"score-box\">\r\n          <div className=\"score-header\">SCORE\r\n          </div>\r\n          <div>{board.score}\r\n          </div>\r\n        </div>\r\n       </div>\r\n        <div className=\"board\">\r\n        {cells}\r\n        {tiles}\r\n        <GameOverlay onRestart={resetGame} board={board}/>\r\n        </div>\r\n       </div>\r\n    );\r\n};\r\n\r\nexport default BoardView;","import { useEffect } from \"react\";\r\n\r\nexport default function useEvent(event, handler, passive = false)\r\n{\r\n    useEffect(() => {\r\n        window.addEventListener(event,handler,passive);\r\n        return function cleanUp(){\r\n           window.removeEventListener(event,handler,passive);\r\n        };\r\n    });\r\n    \r\n}","import React from 'react'\r\nimport './popup.css'\r\n\r\nfunction Popup(props) {\r\n    return (props.trigger) ? (\r\n\r\n          <div className = \"popup\">\r\n              <div className = \"popup-inner\">\r\n                  { props.children }\r\n                  <svg className=\"close-btn\" onClick = { () => props.setTrigger(false)}stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" viewBox=\"0 0 1024 1024\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 0 1-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z\"></path></svg>\r\n              </div> \r\n            </div>\r\n    ): \"\";\r\n}\r\n\r\nexport default Popup;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst useAudio = (url) => {\r\n  const [audio] = useState(new Audio(url));\r\n  const [playing, setPlaying] = useState(true);\r\n\r\n  const toggle = () => setPlaying(!playing);\r\n\r\n  useEffect(() => {\r\n    playing ? audio.play() : audio.pause();\r\n  }, [playing]);\r\n\r\n  useEffect(() => {\r\n    audio.addEventListener(\"ended\", () => setPlaying(true));\r\n    return () => {\r\n      audio.removeEventListener(\"ended\", () => setPlaying(true));\r\n    };\r\n  }, []);\r\n\r\n  return [playing, toggle];\r\n};\r\nconst Player = ({ url }) => {\r\n  const [playing, toggle] = useAudio(\r\n    (url = \"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3\")\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {playing ? (\r\n        <svg\r\n          stroke=\"currentColor\"\r\n          fill=\"currentColor\"\r\n          stroke-width=\"0\"\r\n          viewBox=\"0 0 512 512\"\r\n          height=\"1em\"\r\n          width=\"1em\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          onClick={toggle}\r\n        >\r\n          <path d=\"M275.5 96l-96 96h-96v128h96l96 96V96zm51.46 27.668l-4.66 17.387c52.066 13.95 88.2 61.04 88.2 114.945 0 53.904-36.134 100.994-88.2 114.945l4.66 17.387C386.81 372.295 428.5 317.962 428.5 256c0-61.963-41.69-116.295-101.54-132.332zm-12.425 46.365l-4.658 17.387C340.96 195.748 362.5 223.822 362.5 256s-21.54 60.252-52.623 68.58l4.658 17.387C353.402 331.552 380.5 296.237 380.5 256c0-40.238-27.098-75.552-65.965-85.967zm-12.424 46.363l-4.657 17.387C307.55 236.49 314.5 245.547 314.5 256s-6.95 19.51-17.047 22.217l4.658 17.387c17.884-4.792 30.39-21.09 30.39-39.604 0-18.513-12.506-34.812-30.39-39.604z\"></path>\r\n        </svg>\r\n      ) : (\r\n        <svg\r\n          stroke=\"currentColor\"\r\n          fill=\"currentColor\"\r\n          stroke-width=\"0\"\r\n          viewBox=\"0 0 512 512\"\r\n          height=\"1em\"\r\n          width=\"1em\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          onClick={toggle}\r\n        >\r\n          <path d=\"M275.5 96l-96 96h-96v128h96l96 96V96zm50.863 89.637l-12.726 12.726L371.273 256l-57.636 57.637 12.726 12.726L384 268.727l57.637 57.636 12.726-12.726L396.727 256l57.636-57.637-12.726-12.726L384 243.273l-57.637-57.636z\"></path>\r\n        </svg>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;","export default __webpack_public_path__ + \"static/media/logo.3e29beef.gif\";","export default __webpack_public_path__ + \"static/media/welcome.ebb08778.png\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport BoardView from './Component/Board';\nimport Popup from './Component/popup';\nimport Player from './Component/Player';\nimport \"./main.css\";\nimport \"./styles.css\";\nimport logo from './logo.gif';\nimport welcome from './welcome.png';\nimport { useState, useEffect } from 'react';\n\nfunction App(){\n  const [timedPopup, setTimedPopup] = useState(false);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setTimedPopup(true);\n    }, 1000);\n  }, []);\n\n  return(\n    <><img className=\"logo\" src={logo} alt=\"Logo\" /><><BoardView /><div className=\"App\">\n      <Popup trigger={timedPopup} setTrigger={setTimedPopup}>\n        <div>\n          <img className=\"welcome\" src={welcome} alt=\"Welcome\"></img>\n          <p className=\"popup-text\"><b>HOW TO PLAY : </b>\n          Use your arrow keys to move the tiles. When two tiles with the same number touch, they merge into one!</p>\n        </div>\n      </Popup>\n      <Player />\n    </div></></>\n  )\n}\n\nReactDOM.render(\n <App />\n,document.getElementById(\"root\")\n)"],"sourceRoot":""}